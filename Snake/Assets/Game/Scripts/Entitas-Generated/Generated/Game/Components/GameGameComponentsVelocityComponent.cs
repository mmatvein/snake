//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Components.Velocity gameComponentsVelocity { get { return (Game.Components.Velocity)GetComponent(GameComponentsLookup.GameComponentsVelocity); } }
    public bool hasGameComponentsVelocity { get { return HasComponent(GameComponentsLookup.GameComponentsVelocity); } }

    public void AddGameComponentsVelocity(UnityEngine.Vector2 newVelocity) {
        var index = GameComponentsLookup.GameComponentsVelocity;
        var component = CreateComponent<Game.Components.Velocity>(index);
        component.velocity = newVelocity;
        AddComponent(index, component);
    }

    public void ReplaceGameComponentsVelocity(UnityEngine.Vector2 newVelocity) {
        var index = GameComponentsLookup.GameComponentsVelocity;
        var component = CreateComponent<Game.Components.Velocity>(index);
        component.velocity = newVelocity;
        ReplaceComponent(index, component);
    }

    public void RemoveGameComponentsVelocity() {
        RemoveComponent(GameComponentsLookup.GameComponentsVelocity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameComponentsVelocity;

    public static Entitas.IMatcher<GameEntity> GameComponentsVelocity {
        get {
            if (_matcherGameComponentsVelocity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameComponentsVelocity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameComponentsVelocity = matcher;
            }

            return _matcherGameComponentsVelocity;
        }
    }
}
